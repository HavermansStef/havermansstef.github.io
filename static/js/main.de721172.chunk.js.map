{"version":3,"sources":["Graph.js","App.js","index.js"],"names":["Graph","title","data","type","height","onSelect","other","ref","useRef","useEffect","Chart","current","is_navigable","defaultProps","randomData","Array","from","length","Math","floor","random","CreateExampleData","labels","datasets","name","chartType","values","Types","Root","styled","div","Header","header","Title","h1","App","useState","SetData","onClick","console","log","map","x","toUpperCase","substring","key","StyledApp","ReactDOM","render","window","document","getElementById"],"mappings":"+mEAIMA,EAAQ,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,MAAOC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,KAA6C,IAAvCC,cAAuC,MAA9B,IAA8B,EAAzBC,EAAyB,EAAzBA,SAAaC,EAAY,2DACnEC,EAAMC,mBAYZ,OAXAC,qBAAU,WACS,IAAIC,IAAMH,EAAII,QAAd,aACfV,QACAC,OACAC,OACAC,SACAQ,eAAgBP,GACbC,MAEJ,CAACJ,EAAME,EAAQE,EAAOL,EAAOE,IAG9B,6BACE,wBAAS,CAAEI,MAAK,cAAeF,MAKtBL,I,mXAUfA,EAAMa,aAAe,CACnBT,OAAQ,IACRC,SAAU,cC/BZ,IAAMS,EAAa,kBAAMC,MAAMC,KAAK,CAAEC,OAAQ,IAAK,kBAAMC,KAAKC,MAAsB,GAAhBD,KAAKE,cAEnEC,EAAoB,iBACxB,CAAEC,OAAQ,CAAC,SAAU,UAAW,YAAa,WAAY,SAAU,WAAY,UAC7EC,SAAU,CAAC,CACTC,KAAM,UACNC,UAAW,MACXC,OAAQZ,KAEV,CACEU,KAAM,UACNC,UAAW,OACXC,OAAQZ,QAIRa,EAAQ,CAAC,MAAO,MAAO,cA8BvBC,EAAOC,IAAOC,IAAV,KAIJC,EAASF,IAAOG,OAAV,KASNC,EAAQJ,IAAOK,GAAV,KAIIC,EA7CH,WAAO,IAAD,EACQC,mBAASf,KADjB,mBACTnB,EADS,KACHmC,EADG,KAQhB,OACE,kBAACT,EAAD,KACE,kBAACG,EAAD,KACE,kBAACE,EAAD,yCAEF,2BAAY,CAAEK,QAAS,kBATzBD,EAAQhB,UACRkB,QAAQC,IAAItC,IAQmCC,KAAM,UAAnD,iBAGEwB,EAAMc,KAAI,SAACC,GAAD,OACV,kBAAC,EACK,CAAEzC,MAAM,GAAD,OAAKyC,EAAE,GAAGC,cAAgBD,EAAEE,UAAU,GAAtC,UACTzC,KAAMuC,EACNG,IAAKH,EACLxC,c,wNCtCZ,IAAM4C,EAAYjB,YAAOM,EAAPN,CAAH,KAOfkB,IAASC,OAAO,kBAACF,EAAD,MAAeG,OAAOC,SAASC,eAAe,W","file":"static/js/main.de721172.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Chart } from 'frappe-charts/dist/frappe-charts.min.esm';\n\nconst Graph = ({ title, data, type, height = 250, onSelect, ...other }) => {\n  const ref = useRef();\n  useEffect(() => {\n    const newGraph = new Chart(ref.current, {\n      title,\n      data,\n      type,\n      height,\n      is_navigable: !!onSelect,\n      ...other,\n    });\n  }, [data, height, other, title, type]);\n\n  return (\n    <div>\n      <div {...{ ref, 'data-select': onSelect }} />\n    </div>\n  );\n};\n\nexport default Graph;\n\nGraph.propTypes = {\n  type: PropTypes.string.isRequired,\n  data: PropTypes.object.isRequired,\n  onSelect: PropTypes.func,\n  height: PropTypes.number,\n  title: PropTypes.string.isRequired,\n};\n\nGraph.defaultProps = {\n  height: 250,\n  onSelect: () => {},\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport Graph from './Graph';\n\nconst randomData = () => Array.from({ length: 7 }, () => Math.floor(Math.random() * 10));\n\nconst CreateExampleData = () => (\n  { labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\n    datasets: [{\n      name: 'Commits',\n      chartType: 'bar',\n      values: randomData(),\n    },\n    {\n      name: 'Coffees',\n      chartType: 'line',\n      values: randomData(),\n    }] }\n);\n\nconst Types = ['bar', 'pie', 'percentage'];\n\nconst App = () => {\n  const [data, SetData] = useState(CreateExampleData());\n\n  const updateValues = () => {\n    SetData(CreateExampleData());\n    console.log(data);\n  };\n\n  return (\n    <Root>\n      <Header>\n        <Title>React Wrapper for frappe-charts</Title>\n      </Header>\n      <button {...{ onClick: () => updateValues(), type: 'button' }}>\n        Update data !\n      </button>\n      { Types.map((x) => (\n        <Graph\n          {...{ title: `${x[0].toUpperCase() + x.substring(1)} chart`,\n            type: x,\n            key: x,\n            data }}\n        />\n      ))}\n    </Root>\n  );\n};\n\nconst Root = styled.div`\ntext-align: center;\n`;\n\nconst Header = styled.header`\nbackground: #252830;\ncolor: white;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 20px;\n`;\n\nconst Title = styled.h1`\nmargin-left: 30px;\n`;\n\nexport default App;\n","import 'core-js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport App from './App';\n\nconst StyledApp = styled(App)`\nmargin: 0;\npadding: 0;\nfont-family: -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n  \"Helvetica Neue\", Arial, sans-serif;\n`;\n\nReactDOM.render(<StyledApp />, window.document.getElementById('main'));\n\nif (module.hot) {\n  module.hot.accept();\n}\n"],"sourceRoot":""}